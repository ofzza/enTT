{"version":3,"sources":["entity.js"],"names":["defaultValueModule","dynamicValueModule","castingValueModule","Entity","value","EntityClass","cast","bind","collection","castCollection","debug","constructor","Error"],"mappings":";;;;;;;;;AAKA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eARA;AACA;AACA;;AAEA;;;AAMA;AACA,IAAMA,qBAAqB,4BAA3B;AAAA,IACMC,qBAAqB,4BAD3B;AAAA,IAEMC,qBAAqB,4BAF3B;;AAIA;;;;;;IAKqBC,M;;;;;;;AAUnB;;;;;;;;yBAQaC,K,EAAOC,W,EAAa;AAAE,aAAO,oBAAgBC,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B,EAAgCH,KAAhC,EAAuCC,WAAvC,CAAP;AAA6D;AAChG;;;;;;;;;;;mCAQuBG,U,EAAYH,W,EAAa;AAAE,aAAO,oBAAgBI,cAAhB,CAA+BF,IAA/B,CAAoC,IAApC,EAA0CC,UAA1C,EAAsDH,WAAtD,CAAP;AAA4E;;AAE9H;;;;;;;;;;;AA3BA;;;;;wBAKoB;AAAE,aAAO,oBAAgBK,KAAvB;AAA+B,K;sBACnCN,K,EAAO;AAAE,0BAAgBM,KAAhB,GAAwBN,KAAxB;AAAgC;;;wBA2BrC;AACpB,aAAO,CACLJ,kBADK,EAELC,kBAFK,EAGLC,kBAHK,CAAP;AAKD;;AAED;;;;;;;AAIA,oBAAe;AAAA;;AAGb;AAHa;;AAIb,QAAI,MAAKS,WAAL,KAAqBR,MAAzB,EAAiC;AAC/B,YAAM,IAAIS,KAAJ,CAAU,wFAAV,CAAN;AACD;AANY;AAOd;;;;;kBAtDkBT,M","file":"entity.js","sourcesContent":["// =====================================================================================================================\n// ENTITY: Basic class\n// =====================================================================================================================\n\n// Import dependencies\nimport EntityPrototype from './prototype';\nimport DefaultValueEntityModule from './modules/default-value';\nimport DynamicValueEntityModule from './modules/dynamic-value';\nimport CastingValueEntityModule from './modules/casting-value';\n\n// Instantiate modules used in all Entities\nconst defaultValueModule = new DefaultValueEntityModule(),\n      dynamicValueModule = new DynamicValueEntityModule(),\n      castingValueModule = new CastingValueEntityModule();\n\n/**\n * Entity base class\n * @export\n * @class Entity\n */\nexport default class Entity extends EntityPrototype {\n\n  /**\n   * Debugging status (When debugging, some extra properties are exposed)\n   * @static\n   * @memberof Entity\n   */\n  static get debug () { return EntityPrototype.debug; }\n  static set debug (value) { EntityPrototype.debug = value; }\n\n  /**\n   * Casts value as entity by copying content of all properties found on both\n   * @static\n   * @param {any} value Value to cast\n   * @param {any} EntityClass Target casting Entity class\n   * @returns {any} Cast instance of required Entity class\n   * @memberof Entity\n   */\n  static cast (value, EntityClass) { return EntityPrototype.cast.bind(this)(value, EntityClass); }\n  /**\n   * Casts collection of values as a collection of entities by casting each mamber of the collection\n   * @static\n   * @param {any} collection Collection to cast\n   * @param {any} EntityClass Target casting Entity class\n   * @returns {any} Cast collection\n   * @memberof Entity\n   */\n  static castCollection (collection, EntityClass) { return EntityPrototype.castCollection.bind(this)(collection, EntityClass); }\n\n  /**\n   * Entity modules included by default\n   * @readonly\n   * @static\n   * @memberof Entity\n   */\n  static get modules () {\n    return [\n      defaultValueModule,\n      dynamicValueModule,\n      castingValueModule\n    ];\n  }\n\n  /**\n   * Creates an instance of Entity.\n   * @memberof Entity\n   */\n  constructor () {\n    super();\n\n    // Check if class neing directly instantiated\n    if (this.constructor === Entity) {\n      throw new Error('Entity class is not meant to be instantiated directly - extend it with your own class!');\n    }\n  }\n\n}\n"],"sourceRoot":"/source/"}